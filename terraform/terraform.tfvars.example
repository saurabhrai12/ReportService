# Example Terraform Variables File
# Copy this to terraform.tfvars and fill in your actual values

# AWS Configuration
aws_region = "us-east-1"
environment = "production"
project_name = "report-service"

# Network Configuration
vpc_id = "vpc-12345678"
subnet_ids = ["subnet-12345678", "subnet-87654321"]

# Snowflake Configuration
snowflake_account = "OILZKIQ.ID94597"
# This should be the ARN of your Snowflake service account
snowflake_role_arn = "arn:aws:iam::YOUR_SNOWFLAKE_ACCOUNT:role/CORTEX_USER_ROLE"

[connections.my_example_connection]
account = "OILZKIQ-ID94597"
user = "SAURABHMAC"
authenticator = "externalbrowser"
role = "CORTEX_USER_ROLE"
warehouse = "COMPUTE_WH"
database = "EMPLOYEE_DB"
schema = "EMPLOYEE_SCHEMA"

# Container Configuration
container_image = "123456789.dkr.ecr.us-east-1.amazonaws.com/report-service:latest"

# Storage Configuration
reports_bucket = "your-reports-bucket"



[connections.my_example_connection]
account = "OILZKIQ-ID94597"
user = "SAURABHMAC"
authenticator = "externalbrowser"
role = "CORTEX_USER_ROLE"
warehouse = "COMPUTE_WH"
database = "EMPLOYEE_DB"
schema = "EMPLOYEE_SCHEMA"
account = ZE37870.AWS_EU_WEST_1


203977009513

aws iam create-role --role-name
  report-service-snowflake-integration-role \
    --assume-role-policy-document '{
      "Version": "2012-10-17",
      "Statement": [{
        "Effect": "Allow",
        "Principal": {"AWS": 
  "arn:aws:iam::203977009513:root"},
        "Action": "sts:AssumeRole",
        "Condition": {"StringEquals": 
  {"sts:ExternalId": "snowflake_external_id"}}
      }]
    }'